""" 
OpenData

MÃ³dulo que acessa as funcionalidades do sistema OpenData

Author: Juliano Kosloski - Automation Developer
Created: 07/07/2022 by Juliano Kosloski
"""

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
import dotenv
import os
import time

class OpenData:
    
    #internal use only
    _urlDict = { 
    "C:/PATH//basqaasdq2ewweq.csv" :"https://url.com"
    }

    def __getCred__(): 
        """
        Gets appropriate credentials and returns them for in-class use
        """
    
        dotenv.load_dotenv(dotenv.find_dotenv())
        sysLogin = os.environ.get("USER_OPEN_DATA")
        sysPassword = os.environ.get("PASS_OPEN_DATA")
        
        return sysLogin, sysPassword

    def startDriver():
        """
        Starts up the Chrome WebDriver config and returns a readied driver instance
        """
        
        option = webdriver.ChromeOptions()
        option.binary_location = "C:/PATH/"   
        driverService = Service('C:/PATH/') #sets up a driver service 
        driver = webdriver.Chrome(service=driverService, options=option) #starts the driver
        return driver

    def getLogin(driver):
        """
        Takes a new driver instance and logs into the HGV website
        
        params:
        driver: a WebDriver instance generated by other function
        """
        
        sysLogin, sysPassword = OpenData.__getCred__()
        
        driver.get("https://ewadasa.com")
        element = driver.find_element(By.ID, "field-login" )
        element.clear()
        element.send_keys(sysLogin)
        element = driver.find_element(By.ID,"field-password" )
        element.clear()
        element.send_keys(sysPassword)
        element = driver.find_element(By.XPATH, "/html/body/div[2]/div/div[3]/div/section/div/form/div[4]/button")
        element.click()

    def downloadReports(driver, timeout = 30):
        """
        Downloads all reports listed on the in-class dictionary 'url_dict'
        
        params:
        driver: a WebDriver instance generated by other function
        timeout: time in seconds to wait for the downloads to be completed
        """
        
        for report in OpenData._urlDict:
            
            driver.get(OpenData._urlDict[report])
            element = driver.find_element(By.XPATH,"/html/body/div[2]/div/div[3]/div/article/div/section[1]/ul/li/p[1]/a[2]") #buttom "Baixar"
            element.click()

        time.sleep(timeout)
            
    def checkReports(driver) -> bool:
        """
        Check if all reports were downloaded and then ends the session
        """
        
        for path in OpenData._urlDict.keys():
            
            if os.path.exists(path) == True:
                
                print("OpenData download sucessful.")
                driver.quit()
                return True
            
            elif os.path.exists(path) == False:
                
                print('Ocorreu um problema nos downloads!')
                driver.quit()
                return False
        
    def endSession(driver):
        """
        Ends the driver session
        """

        driver.quit()    
         

        